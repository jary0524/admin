<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.jary</groupId>
	<artifactId>admin</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>admin Maven Webapp</name>
	<url>http://maven.apache.org</url>
    
	<!-- 指定Maven仓库 （使用默认的maven中央仓库下载太慢，甚至出错） -->
	<properties>
		<!-- 指明编译源代码时使用的字符编码，maven编译的时候默认使用的GBK编码， 通过project.build.sourceEncoding属性设置字符编码，告诉maven这个项目使用UTF-8来编译 -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- jdk的版本 -->
		<java.version>1.8</java.version>
        <!-- spring版本号 -->
        <springframework.version>4.1.6.RELEASE</springframework.version>
        <jackson.version>2.4.4</jackson.version>
        <shiro.version>1.2.4</shiro.version>
        
        <!-- mybatis版本号 -->
        <mybatis.version>3.2.5</mybatis.version>
		<mybatis.spring.version>1.2.2</mybatis.spring.version>
		<ehcache.version>2.6.8</ehcache.version>
		<mybatis.ehcache.version>1.0.0</mybatis.ehcache.version>
		<!-- mysql -->
		<mysql.connector.version>5.1.35</mysql.connector.version>
        <!-- log4j日志文件管理包版本 -->
		<slf4j.version>1.7.12</slf4j.version>
		<log4j.version>1.2.17</log4j.version>
		
	</properties>
	
	<!-- 只有当外层的dependency元素中没有指明版本信息时，dependencyManagement中的dependencies元素才会起作用 -->
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>${springframework.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>

		<dependency>
			<groupId>com.jary.framework</groupId>
			<artifactId>core</artifactId>
			<version>0.0.1</version>
		</dependency>
		
		
		
	</dependencies>
	
	<build>
		<finalName>admin</finalName>
		<resources>
			<resource>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.xml</include><!-- 此配置不可缺，否则mybatis的Mapper.xml将会丢失 -->
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>${project.build.sourceEncoding}</encoding><!-- 此插件无设置时会使用默认的字符集 -->
				</configuration>
			</plugin>
			<!-- 
				scanIntervalSeconds 配置扫描时间时间, 如果有文件变动, 如pom.xml,web.xml或classes, 则jetty会重新加载应用, 相当方便
				contextPath 配置ROOT, 即将web的上下文路径, 改为 /
				将jetty默认的uri编码  (jetty默认是UTF-8)
			 -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.26</version>
				<configuration>
					<connectors>
						<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
							<port>8888</port>
						</connector>
					</connectors>
					<!-- <webDefaultXml>src/main/resources/jetty/webdefault.xml</webDefaultXml> -->
					<!-- <webAppSourceDirectory>src/main/webapp</webAppSourceDirectory> -->
	                <!-- <contextPath>/</contextPath> -->
					<!-- <reload>automatic</reload> -->
					<!-- 每3秒的间隔扫描一次,实现热部署 -->
	                <!-- <scanIntervalSeconds>3</scanIntervalSeconds>   -->
			        <systemProperties>  
			            <systemProperty>  
				            <name>org.mortbay.util.URI.charset</name>  
				            <value>UTF-8</value>  
        				</systemProperty>  
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
